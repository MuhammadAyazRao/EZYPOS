<Application x:Class="EZYPOS.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"             
             xmlns:local="clr-namespace:EZYPOS">
    <Application.Resources>       
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.LightBlue.xaml" />                
            </ResourceDictionary.MergedDictionaries>
            <SolidColorBrush x:Key="Orage" Color="#FFEA4A0B"/>
            <SolidColorBrush x:Key="Gray" Color="#FFF0F0F0"/>
            <SolidColorBrush x:Key="White" Color="White"/>
            <SolidColorBrush x:Key="Danger" Color="#FFD9534F"/>
            <SolidColorBrush x:Key="Success" Color="#FF758F47"/>
            <SolidColorBrush x:Key="Info" Color="#FF5BC0DE"/>

            <SolidColorBrush x:Key="SharpBlue" Color="#FF00B5FA"/>
            <SolidColorBrush x:Key="DarkBlue" Color="#FF0175A8"/>

            <!--Laze title style-->
            <Style TargetType="Label" x:Key="lblLazeTitle">
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontFamily" Value="Raleway"/>
            </Style>

            <!--Button Template for tabs-->
            <ControlTemplate TargetType="Button" x:Key="btnTab">
                <Border
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
                    <ContentPresenter HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                </Border>
            </ControlTemplate>

            <Style TargetType="Label" x:Key="NumPad">
                <Setter Property="Foreground" Value="{DynamicResource White}"/>
                <Setter Property="Background" Value="{DynamicResource DarkBlue}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="BorderBrush" Value="{DynamicResource DarkBlue}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Style.Triggers>
                </Style.Triggers>
            </Style>

            <Style TargetType="Button" x:Key="btn">
                <Setter Property="Width" Value="92"/>
                <Setter Property="Height" Value="64"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <ContentControl>
                                <Label x:Name="btnLbl" Style="{DynamicResource NumPad}">
                                    <ContentPresenter/>
                                </Label>
                            </ContentControl>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="btnLbl" Property="Background" Value="#FF01587E"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Item listConatiner Style-->
            <Style x:Key="listBoxItemStyle" TargetType="ListBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border
                                    MinHeight="{TemplateBinding MinHeight}"
                                    MaxHeight="{TemplateBinding MaxHeight}"
                                    Margin="2"
                                    Width="{TemplateBinding Width}"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="2"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Width" Value="160"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Style.Triggers>
                    <Trigger Property="ListBoxItem.IsSelected" Value="True">
                        <Setter Property="Background" Value="{StaticResource SharpBlue}"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Height" Value="50"/>
                    </Trigger>
                    <Trigger Property="ListBoxItem.IsSelected" Value="False">
                        <Setter Property="Height" Value="50"/>
                        <Setter Property="Background" Value="#fff"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="OrdersAdonItem" TargetType="ListBoxItem" BasedOn="{StaticResource listBoxItemStyle}">
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Height" Value="20"/>
                        <Setter Property="HorizontalContentAlignment" Value="Right"/>
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Width" Value="200"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="False">
                        <Setter Property="Height" Value="20"/>
                        <Setter Property="HorizontalContentAlignment" Value="Right"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="Width" Value="200"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="CartAdonItems" TargetType="ListBoxItem" BasedOn="{StaticResource OrdersAdonItem}">
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{x:Null}"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Width" Value="250"/>
                        <Setter Property="Height" Value="50"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="False">
                        <Setter Property="Background" Value="{x:Null}"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Width" Value="250"/>
                        <Setter Property="Height" Value="50"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="InvoiceAdonItem" TargetType="ListBoxItem" BasedOn="{StaticResource OrdersAdonItem}">
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Width" Value="120"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="False">
                        <Setter Property="Width" Value="120"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--List Box Item style for orderDtl-->
            <Style TargetType="ListBoxItem" x:Key="orderDetailsList">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border
                                    MinHeight="{TemplateBinding MinHeight}"
                                    MaxHeight="{TemplateBinding MaxHeight}"
                                    Margin="2"
                                    Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="2"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Style.Triggers>
                    <Trigger Property="ListBoxItem.IsSelected" Value="True">
                        <Setter Property="Background" Value="#fff"/>
                    </Trigger>
                    <Trigger Property="ListBoxItem.IsSelected" Value="False">
                        <Setter Property="Background" Value="#fff"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--List Box Item PayentMode style for Transaction-->
            <Style TargetType="ListBoxItem" x:Key="PaymentMode" BasedOn="{StaticResource listBoxItemStyle}">
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{DynamicResource Info}"/>
                    </Trigger>
                </Style.Triggers>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Width" Value="125" />
                <Setter Property="Height" Value="30" />
            </Style>
            <!--List Box Item Payment Via style for orderDtl-->
            <Style TargetType="ListBoxItem" x:Key="PaymentViaList" BasedOn="{StaticResource listBoxItemStyle}">
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{DynamicResource Info}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--List item style dilTimes-->
            <Style TargetType="ListBoxItem" x:Key="DiliveryItem" BasedOn="{StaticResource listBoxItemStyle}">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Width" Value="250" />
            </Style>
            

            <Style TargetType="ListBoxItem" x:Key="ComboboxItemStyle" BasedOn="{StaticResource listBoxItemStyle}">
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
            </Style>

            <!--List item TAB style-->
            <Style TargetType="ListBoxItem" x:Key="tabStyle" BasedOn="{StaticResource listBoxItemStyle}">
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{x:Null}"/>
                        <Setter Property="Foreground" Value="{DynamicResource Orage}"/>
                        <Setter Property="FontSize" Value="10"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="False">
                        <Setter Property="Background" Value="{x:Null}"/>
                        <Setter Property="Foreground" Value="Gray"/>
                        <Setter Property="FontSize" Value="10"/>
                        <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--List item TAB style-->
            <Style TargetType="ListBoxItem" x:Key="tabStyleOrder" BasedOn="{StaticResource tabStyle}">
                <Setter Property="Width" Value="150"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{DynamicResource Gray}"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="False">
                        <Setter Property="Background" Value="{DynamicResource Gray}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Selected AdonItems style-->
            <Style TargetType="ListBoxItem" x:Key="selectedAdonItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border
                                    MinHeight="{TemplateBinding MinHeight}"
                                    MaxHeight="{TemplateBinding MaxHeight}"
                                    Margin="{TemplateBinding Margin}"
                                    Width="{TemplateBinding Width}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Width" Value="120" />
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Orage}"/>
                <Setter Property="BorderThickness" Value="1.5"/>
                <Style.Triggers>
                    <Trigger Property="ListBoxItem.IsSelected" Value="True">
                        <Setter Property="Background" Value="DarkOrange"/>
                        <Setter Property="Foreground" Value="{DynamicResource White}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource Orage}"/>
                    </Trigger>
                    <Trigger Property="ListBoxItem.IsSelected" Value="False">
                        <Setter Property="Background" Value="DarkOrange"/>
                        <Setter Property="Foreground" Value="{DynamicResource White}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource Orage}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!---Buton Update Style-->
            <Style TargetType="Button" x:Key="TransparentButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="border" Background="{DynamicResource White}">
                                <ContentPresenter 
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="Button.IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="Wheat" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Button Danger-->
            <Style TargetType="Button" x:Key="btnDanger">
                <Setter Property="Width" Value="150"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                            x:Name="border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="4"
                                            MaxHeight="{TemplateBinding MaxHeight}"
                                            MaxWidth="{TemplateBinding MaxWidth}">
                                <ContentPresenter
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="{DynamicResource Danger}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Style.Triggers>
                    <Trigger Property="Button.IsPressed" Value="True">
                        <Setter Property="Background" Value="#FFC3524F"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--flate button style based on button danger-->
            <Style TargetType="Button" x:Key="btnDangerFlate" BasedOn="{StaticResource btnDanger}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                            x:Name="border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="0"
                                            MaxHeight="{TemplateBinding MaxHeight}"
                                            MaxWidth="{TemplateBinding MaxWidth}">
                                <ContentPresenter
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="btnSuccessFlate" BasedOn="{StaticResource btnDangerFlate}">
                <Setter Property="Background" Value="{StaticResource Success}"/>
            </Style>

            <!--Button Default based on Button Danger-->
            <Style TargetType="Button" x:Key="btnDefault" BasedOn="{StaticResource btnDanger}">
                <Setter Property="Background" Value="{DynamicResource White}"/>
                <Setter Property="Foreground" Value="Gray"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Style.Triggers>
                    <Trigger Property="Button.IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource Gray}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--Button Success based on Button Danger-->
            <Style TargetType="Button" BasedOn="{StaticResource btnDanger}" x:Key="btnSuccess">
                <Setter Property="Background" Value="#FF758F47"/>
            </Style>

            <!--Button Primery based on Button Danger-->
            <Style TargetType="Button" BasedOn="{StaticResource btnDanger}" x:Key="btnPrimery">
                <Setter Property="Background" Value="#FF2E6DA4"/>
            </Style>

            <!--Button Info based on Button Danger-->
            <Style TargetType="Button" BasedOn="{StaticResource btnDanger}" x:Key="btnInfo">
                <Setter Property="Background" Value="#FF5BC0DE"/>
            </Style>

            <!--button Tiles based on Button Danger-->
            <Style TargetType="Button" BasedOn="{StaticResource btnDanger}" x:Key="btnTile">
                <Setter Property="Background" Value="{StaticResource SharpBlue}"/>
            </Style>
            <!--<Style TargetType="Button" BasedOn="{StaticResource btnDanger}" x:Key="btnTile">
                <Setter Property="Background" Value="{Binding bg_color}"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{Binding text_color}"/>
                <Setter Property="Width" Value="auto"/>
                <Setter Property="Height" Value="auto"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding bg_color}" Value="">
                        <Setter Property="Foreground" Value="{StaticResource Gray}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding bg_color}" Value="">
                        <Setter Property="Background" Value="{StaticResource SharpBlue}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding bg_color}" Value="{x:Null}">
                        <Setter Property="Background" Value="{StaticResource SharpBlue}"/>
                        <Setter Property="Foreground" Value="{DynamicResource White}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>-->

            <!--Button style for Expander-->
            <Style TargetType="Button" x:Key="btnExpander">
                <Setter Property="Background" Value="{DynamicResource Gray}"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Width" Value="60"/>
                <Setter Property="FontSize" Value="10"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Foreground" Value="Gray"/>
                <Style.Triggers>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--Dialogue Window Style-->
            <Style TargetType="Window" x:Key="winDialogue">
                <Setter Property="AllowsTransparency" Value="True"/>
                <Setter Property="WindowState" Value="Maximized"/>
                <Setter Property="WindowStyle" Value="None"/>
                <Setter Property="ResizeMode" Value="NoResize"/>
                <Setter Property="Background" Value="#66000000"/>
                <Setter Property="FontFamily" Value="Raleway"/>
            </Style>

            <!--Input Box Style-->
            <Style TargetType="TextBox"  x:Key="txtInput">
                <Setter Property="Height" Value="50"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="Padding" Value="30 13 30 13"/>
                <Setter Property="BorderBrush" Value="Black"/>
                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderThickness" Value="1"/>

                    </Trigger>
                    <Trigger Property="IsFocused" Value="False">
                        <Setter Property="BorderThickness" Value="1"/>
                    </Trigger>
                </Style.Triggers>

            </Style>


            <!--TextBox Control Template-->
            <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}">
                <Border Background="{TemplateBinding Background}" 
                x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                    <ScrollViewer x:Name="PART_ContentHost"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>

                    </Trigger>
                    <Trigger Property="Width" Value="Auto">
                        <Setter Property="MinWidth" Value="30"/>
                    </Trigger>
                    <Trigger Property="Height" Value="Auto">
                        <Setter Property="MinHeight" Value="20"/>
                    </Trigger>

                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="btnToggle" TargetType="ToggleButton">
                <Border Name="border"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="3"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}">
                    <ContentPresenter Name="CP"
                                                          HorizontalAlignment="Center"
                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                          Content="{TemplateBinding Content}"
                                                          VerticalAlignment="Center"/>
                </Border>
            </ControlTemplate>


            <Style TargetType="ToggleButton" x:Key="btnToggleStyle">
                <Setter Property="Foreground" Value="{DynamicResource DarkBlue}"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderBrush" Value="{DynamicResource DarkBlue}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="{DynamicResource DarkBlue}"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style TargetType="Button" x:Key="btnMenu">
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Style.Triggers>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="#FF035F87"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#FF035F87"/>
                    </Trigger>
                </Style.Triggers>
            </Style>


            <!--<FlowDocument x:Key="FlowInvoice" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:local="clr-namespace:Epos.Invoices"
              ColumnWidth="400" FontSize="14" FontFamily="Arial" PageWidth="3 in">

                <Paragraph>
                    <InlineUIContainer>
                        <Grid Width="2.7 in" Margin="0 10 0 0">
                            <Image Width="61" Source="UserControls\Icons\grid-world.png" HorizontalAlignment="Center" />
                        </Grid>
                    </InlineUIContainer>
                    <Run Text=" "/>
                    <InlineUIContainer>
                        <TextBlock Text="{Binding Order.delivery_type}" TextAlignment="Center" FontSize="20" Width="2.7 in" />
                    </InlineUIContainer>
                    <Grid Width="259" Height="84">
                        <TextBlock TextAlignment="Left" FontSize="10" Height="14" VerticalAlignment="Top" HorizontalAlignment="Left" Width="120">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} {1}">
                                    <Binding Path="Order.Customer.bill_name"/>
                                    <Binding Path="Order.Customer.bill_surname"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock Text="{Binding Order.Customer.bill_door_num}" TextAlignment="Left" FontSize="10" Margin="0,14,0,0" Height="12" VerticalAlignment="Top" HorizontalAlignment="Left" Width="120"/>
                        <TextBlock Text="{Binding Order.Customer.bill_street}" TextAlignment="Left" FontSize="10" Margin="0,26,0,0" Height="12" VerticalAlignment="Top" HorizontalAlignment="Left" Width="120"/>
                        <TextBlock Text="{Binding Order.Customer.bill_town}" TextAlignment="Left" FontSize="10" Margin="0,39,0,0" Height="12" VerticalAlignment="Top" HorizontalAlignment="Left" Width="120"/>
                        <TextBlock Text="{Binding Order.Customer.bill_zipcode}" TextAlignment="Left" FontSize="10" Margin="0,53,0,0" Height="12" VerticalAlignment="Top" HorizontalAlignment="Left" Width="120"/>
                        <TextBlock Text="{Binding Order.Customer.bill_phone}" TextAlignment="Left" FontSize="10" Margin="0,65,0,0" Height="12" VerticalAlignment="Top" HorizontalAlignment="Left" Width="120"/>
                        <TextBlock Text="{Binding Rest.name}" FontSize="13" Height="19" TextAlignment="Right" VerticalAlignment="Top" HorizontalAlignment="Right" Width="120"/>
                        <TextBlock Text="{Binding Rest.postcode}" FontSize="10" Height="19" TextAlignment="Right" VerticalAlignment="Top" HorizontalAlignment="Right" Width="120" Margin="0,19,0,0"/>
                        <TextBlock Text="Call Now" FontSize="10" Height="13" TextAlignment="Right" VerticalAlignment="Top" HorizontalAlignment="Right" Width="120" Margin="0,38,0,0"/>
                        <TextBlock Text="{Binding Rest.cell_number}" FontSize="10" Height="13" TextAlignment="Right" VerticalAlignment="Top" HorizontalAlignment="Right" Width="120" Margin="0,51,0,0"/>
                    </Grid>
                    <Label Width="2.7 in" FontSize="12" FontWeight="DemiBold" HorizontalContentAlignment="Center">
                        <Label.Content>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}Bill {0}">
                                        <Binding Path="BillNo"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Label.Content>
                    </Label>

                    <ListBox Name="list" Width="2.7 in" ScrollViewer.HorizontalScrollBarVisibility="Hidden" BorderThickness="0" ItemsSource="{Binding Order.BillSplit}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Width="2.7 in">
                                    <TextBlock TextAlignment="Center" FontSize="10"/>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding item_qty}" Foreground="Black" FontSize="10" Width=".1 in"/>
                                        <TextBlock Text="{Binding item_name}" DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=FrameworkElement}}" Foreground="Black" FontSize="10" Width="1.9 in"/>
                                        <TextBlock Text="{Binding LineTotal, StringFormat=C}" Foreground="Black" TextAlignment="Right" FontSize="10" Width=".6 in"/>
                                    </StackPanel>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="BorderThickness" Value="0 0 0 1"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>

                    <InlineUIContainer>
                        <Line X1="0 in" X2="2.7 in" Stroke="Black" Stretch="Uniform"/>
                    </InlineUIContainer>
                    <InlineUIContainer>
                        <Grid Width="259" Height="47">
                            <TextBlock Text="Sub Total:" TextAlignment="Left" FontSize="11" FontWeight="Bold" Height="11" VerticalAlignment="Top" HorizontalAlignment="Left" Width="53"/>
                            <TextBlock Text="{Binding Order.total, StringFormat=C}" FontSize="11" TextAlignment="Right" HorizontalAlignment="Right" Width="49" Height="11" VerticalAlignment="Top"/>
                            <TextBlock Text="Delivery Charges" TextAlignment="Left" FontSize="11" FontWeight="Bold" Margin="0,16,0,0" Height="12" VerticalAlignment="Top" HorizontalAlignment="Left" Width="91"/>
                            <TextBlock Text="0.00" FontSize="11" TextAlignment="Right" Margin="210,16,0,0" Height="11" VerticalAlignment="Top"/>
                            <TextBlock Text="Total:" HorizontalAlignment="Left" Width="72" TextAlignment="Left" FontSize="12" FontWeight="ExtraBlack" Margin="0,33,0,0" Height="11" VerticalAlignment="Top"/>
                            <TextBlock Text="{Binding Order.total, StringFormat=C}" FontSize="12" TextAlignment="Right" Margin="210,33,0,0" HorizontalAlignment="Left" FontWeight="ExtraBlack" Width="49" Height="11" VerticalAlignment="Top"/>
                        </Grid>
                    </InlineUIContainer>
                    <Run Text=" "/>
                    <InlineUIContainer>
                        <Line X1="0 in" X2="2.7 in" Stroke="Black" Stretch="Uniform"/>
                    </InlineUIContainer>
                    <Run Text=" "/>
                    <InlineUIContainer>
                        <Label Width="2.7 in" HorizontalContentAlignment="Center" FontSize="12">
                            <Label.Content>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}Received at: {0:dd/MM/yyyy hh:mm tt}">
                                            <Binding Path="Order.date"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Label.Content>
                        </Label>
                    </InlineUIContainer>
                    <InlineUIContainer>
                        <Label Width="2.7 in" HorizontalContentAlignment="Center" FontWeight="Bold" Content="Order count"/>
                    </InlineUIContainer>
                    <Run Text=" "/>
                    <InlineUIContainer>
                        <TextBlock Width="2.7 in" TextAlignment="Center" FontWeight="Bold" Text="{Binding Order.order_count}"/>
                    </InlineUIContainer>
                    <Run Text=" "/>
                    <Label Width="2.7 in" HorizontalContentAlignment="Center" FontSize="12">
                        <Label.Content>
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}Served By: {0}">
                                        <Binding Path="Order.addby"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Label.Content>
                    </Label>
                    <InlineUIContainer>
                        <TextBlock Width="2.7 in" TextAlignment="Center" FontSize="12" Text="Transaction #"/>
                    </InlineUIContainer>
                    <Run Text=" "/>
                    <InlineUIContainer>
                        <TextBlock Width="2.7 in" TextAlignment="Center" Text="{Binding Order.id}" FontSize="12"/>
                    </InlineUIContainer>
                    <Run Text=" "/>
                </Paragraph>
            </FlowDocument>-->
           
        </ResourceDictionary>

    </Application.Resources>
</Application>

